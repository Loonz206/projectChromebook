/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove default margin.
 */
body {
  margin: 0;
}
/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}
/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}
/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}
/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}
/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}
/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}
/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}
/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}
/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}
/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}
/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}
/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}
/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}
/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}
/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}
/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}
/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}
/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}
/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
/**
 * These are the functions used throughout the application. This is where
 * overwrites that are not specific to components should be maintained.
 */
/* cubic-bezier, animationName, point-01, point-02, point-03, point-04 */
/* loading animation */
/* 900px / 16px */
/* 760px / 16px */
html {
  font-size: 62.5%;
}
body {
  -webkit-font-smoothing: antialiased;
  font-family: Frutiger, "Frutiger Linotype", 'Lato', Univers, "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  font-size: 1.4rem;
  line-height: 24px;
  line-height: 2.4rem;
}
@media only screen and (max-width: 47.5em) {
  body {
    line-height: 21px;
    line-height: 2.1rem;
  }
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: Frutiger, "Frutiger Linotype", 'Lato', Univers, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
h1 {
  font-size: 24px;
  font-size: 2.4rem;
  line-height: 35px;
  line-height: 3.5rem;
}
@media only screen and (max-width: 47.5em) {
  h1 {
    line-height: 33px;
    line-height: 3.3rem;
  }
}
h2 {
  font-size: 21px;
  font-size: 2.1rem;
  line-height: 31px;
  line-height: 3.1rem;
}
@media only screen and (max-width: 47.5em) {
  h2 {
    line-height: 29px;
    line-height: 2.9rem;
  }
}
h3 {
  font-size: 18px;
  font-size: 1.8rem;
  line-height: 28px;
  line-height: 2.8rem;
}
@media only screen and (max-width: 47.5em) {
  h3 {
    line-height: 26px;
    line-height: 2.6rem;
  }
}
h4 {
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 26px;
  line-height: 2.6rem;
}
@media only screen and (max-width: 47.5em) {
  h4 {
    line-height: 23px;
    line-height: 2.3rem;
  }
}
h5 {
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 26px;
  line-height: 2.6rem;
  text-transform: uppercase;
  font-weight: 300;
}
@media only screen and (max-width: 47.5em) {
  h5 {
    line-height: 23px;
    line-height: 2.3rem;
  }
}
h6 {
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 26px;
  line-height: 2.6rem;
  text-transform: lowercase;
  font-weight: 300;
}
@media only screen and (max-width: 47.5em) {
  h6 {
    line-height: 23px;
    line-height: 2.3rem;
  }
}
hr {
  border: 0;
  height: 1px;
  background: #444444;
  background-image: linear-gradient(to right, #cccccc, #444444, #cccccc);
}
blockquote {
  background: #f9f9f9;
  border-left: 10px solid #cccccc;
  margin: 1.5em 10px;
  padding: 0.5em 10px;
  font-family: Georgia, 'Times New Roman', 'Times', serif;
  quotes: "\201C" "\201D" "\2018" "\2019";
}
blockquote:before {
  color: #cccccc;
  content: open-quote;
  font-size: 4em;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.4em;
}
blockquote p {
  display: inline;
}
p {
  margin-bottom: 1em;
}
a {
  color: #3498db;
  text-decoration: none;
  border-bottom: 1px dotted #999;
}
a:hover,
a:focus {
  color: #196090;
  border-bottom: 1px solid #3498db;
}
a:active {
  color: #ffffff;
  background: #3498db;
}
dt,
dd {
  display: inline;
}
dd {
  margin: 0;
  font-weight: bold;
}
dd::after {
  content: "\A";
  white-space: pre;
}
dd + dt::before {
  content: "\A";
  white-space: pre;
}
dd + dd::before {
  content: ', ';
  font-weight: normal;
}
dd + dd::before {
  content: ', ';
  margin-left: -0.25em;
  font-weight: normal;
}
.wrapper ul {
  margin: 0;
  padding: 0;
}
.wrapper li {
  display: inline-block;
  line-height: 60px;
  width: calc(100% / 4);
}
.wrapper li a {
  color: #ffffff;
}
.wrapper li a:hover,
.wrapper li a:focus {
  border-bottom: 1px solid #ffffff;
}
.wrapper li a:active {
  color: #ffffff;
  background: #3498db;
}
::selection {
  background: #f1c40f;
}
::-moz-selection {
  background: #f1c40f;
}
.lead {
  font-weight: 100;
  font-size: 18px;
  font-size: 1.8rem;
  line-height: 28px;
  line-height: 2.8rem;
}
.hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}
label {
  font-weight: bold;
  color: #222222;
  margin-bottom: .5em;
}
input:not([type=submit]):not([type=file]) {
  width: 100%;
  height: 36px;
  -moz-border-radius: 4px 4px 4px 4px;
  -webkit-border-radius: 4px 4px 4px 4px;
  border-radius: 4px 4px 4px 4px;
  border: 1px solid #7f8c8d;
  color: #555555;
  padding-left: .5em;
}
input[type=email] {
  margin-bottom: .5em;
}
textarea {
  width: 100%;
  height: auto;
  -moz-border-radius: 4px 4px 4px 4px;
  -webkit-border-radius: 4px 4px 4px 4px;
  border-radius: 4px 4px 4px 4px;
  border: 1px solid #7f8c8d;
  color: #555555;
  padding-left: .5em;
}
button {
  height: 36px;
  min-width: 220px;
  color: #ffffff;
  background-color: #3498db;
  border: 1px solid #196090;
  -moz-border-radius: 4px 4px 4px 4px;
  -webkit-border-radius: 4px 4px 4px 4px;
  border-radius: 4px 4px 4px 4px;
  text-align: center;
}
button:hover,
button:focus {
  background-color: #196090;
  border: 1px solid #0a2639;
}
button:active {
  color: #3498db;
  background-color: #ffffff;
  border: 1px solid #3498db;
}
header {
  height: 60px;
  background-color: #3498db;
  box-shadow: 0 1px 1px 1px #cccccc;
}
nav ul {
  display: inline;
}
figure figcaption {
  text-align: center;
}
figure img {
  display: block;
  width: 100%;
  height: auto;
}
main,
.wrapper {
  margin: auto;
  width: 70%;
}
@media only screen and (max-width: 56.25em) {
  main,
  .wrapper {
    width: 94%;
  }
}
[ui-view].ng-enter,
[ui-view].ng-leave {
  position: absolute;
  left: 0;
  right: 0;
  -webkit-transition: all 0.5s ease-in-out;
  -moz-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}
[ui-view].ng-enter {
  opacity: 0;
  -webkit-transform: scale3d(0.5, 0.5, 0.5);
  -moz-transform: scale3d(0.5, 0.5, 0.5);
  transform: scale3d(0.5, 0.5, 0.5);
}
[ui-view].ng-enter-active {
  opacity: 1;
  -webkit-transform: scale3d(1, 1, 1);
  -moz-transform: scale3d(1, 1, 1);
  transform: scale3d(1, 1, 1);
}
[ui-view].ng-leave {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
[ui-view].ng-leave-active {
  opacity: 0;
  -webkit-transform: translate3d(100px, 0, 0);
  -moz-transform: translate3d(100px, 0, 0);
  transform: translate3d(100px, 0, 0);
}

/*# sourceMappingURL=data:application/json;base64, */